/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxEmojiPickerModule, CaretEvent, EmojiEvent } from './public_api';
export { EmojiButtonComponent as ɵc } from './lib/components/emoji-button.component';
export { EmojiCategoriesComponent as ɵj } from './lib/components/emoji-categories.component';
export { EmojiCategoryComponent as ɵf } from './lib/components/emoji-category.component';
export { EmojiContentComponent as ɵd } from './lib/components/emoji-content.component';
export { EmojiFooterComponent as ɵk } from './lib/components/emoji-footer.component';
export { EmojiHeaderComponent as ɵh } from './lib/components/emoji-header.component';
export { EmojiListComponent as ɵe } from './lib/components/emoji-list.component';
export { EmojiPickerComponent as ɵg } from './lib/components/emoji-picker.component';
export { EmojiSearchComponent as ɵi } from './lib/components/emoji-search.component';
export { EmojiPickerApiDirective as ɵa } from './lib/directives/emoji-picker-api.directive';
export { EmojiPickerCaretDirective as ɵb } from './lib/directives/emoji-picker-caret.directive';
export { EmojiEmptyCategoryPipe as ɵl } from './lib/pipes/emoji-empty-category.pipe';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVtb2ppLXBpY2tlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1lbW9qaS1waWNrZXIvIiwic291cmNlcyI6WyJuZ3gtZW1vamktcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQSw2REFBYyxjQUFjLENBQUM7QUFFN0IsT0FBTyxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxNQUFNLHlDQUF5QyxDQUFDO0FBQ25GLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUMzRixPQUFPLEVBQUMsc0JBQXNCLElBQUksRUFBRSxFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFDdkYsT0FBTyxFQUFDLHFCQUFxQixJQUFJLEVBQUUsRUFBQyxNQUFNLDBDQUEwQyxDQUFDO0FBQ3JGLE9BQU8sRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUNuRixPQUFPLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFDbkYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUNuRixPQUFPLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFDbkYsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQyxNQUFNLDZDQUE2QyxDQUFDO0FBQzFGLE9BQU8sRUFBQyx5QkFBeUIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQUM5RixPQUFPLEVBQUMsc0JBQXNCLElBQUksRUFBRSxFQUFDLE1BQU0sdUNBQXVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljX2FwaSc7XG5cbmV4cG9ydCB7RW1vamlCdXR0b25Db21wb25lbnQgYXMgybVjfSBmcm9tICcuL2xpYi9jb21wb25lbnRzL2Vtb2ppLWJ1dHRvbi5jb21wb25lbnQnO1xuZXhwb3J0IHtFbW9qaUNhdGVnb3JpZXNDb21wb25lbnQgYXMgybVqfSBmcm9tICcuL2xpYi9jb21wb25lbnRzL2Vtb2ppLWNhdGVnb3JpZXMuY29tcG9uZW50JztcbmV4cG9ydCB7RW1vamlDYXRlZ29yeUNvbXBvbmVudCBhcyDJtWZ9IGZyb20gJy4vbGliL2NvbXBvbmVudHMvZW1vamktY2F0ZWdvcnkuY29tcG9uZW50JztcbmV4cG9ydCB7RW1vamlDb250ZW50Q29tcG9uZW50IGFzIMm1ZH0gZnJvbSAnLi9saWIvY29tcG9uZW50cy9lbW9qaS1jb250ZW50LmNvbXBvbmVudCc7XG5leHBvcnQge0Vtb2ppRm9vdGVyQ29tcG9uZW50IGFzIMm1a30gZnJvbSAnLi9saWIvY29tcG9uZW50cy9lbW9qaS1mb290ZXIuY29tcG9uZW50JztcbmV4cG9ydCB7RW1vamlIZWFkZXJDb21wb25lbnQgYXMgybVofSBmcm9tICcuL2xpYi9jb21wb25lbnRzL2Vtb2ppLWhlYWRlci5jb21wb25lbnQnO1xuZXhwb3J0IHtFbW9qaUxpc3RDb21wb25lbnQgYXMgybVlfSBmcm9tICcuL2xpYi9jb21wb25lbnRzL2Vtb2ppLWxpc3QuY29tcG9uZW50JztcbmV4cG9ydCB7RW1vamlQaWNrZXJDb21wb25lbnQgYXMgybVnfSBmcm9tICcuL2xpYi9jb21wb25lbnRzL2Vtb2ppLXBpY2tlci5jb21wb25lbnQnO1xuZXhwb3J0IHtFbW9qaVNlYXJjaENvbXBvbmVudCBhcyDJtWl9IGZyb20gJy4vbGliL2NvbXBvbmVudHMvZW1vamktc2VhcmNoLmNvbXBvbmVudCc7XG5leHBvcnQge0Vtb2ppUGlja2VyQXBpRGlyZWN0aXZlIGFzIMm1YX0gZnJvbSAnLi9saWIvZGlyZWN0aXZlcy9lbW9qaS1waWNrZXItYXBpLmRpcmVjdGl2ZSc7XG5leHBvcnQge0Vtb2ppUGlja2VyQ2FyZXREaXJlY3RpdmUgYXMgybVifSBmcm9tICcuL2xpYi9kaXJlY3RpdmVzL2Vtb2ppLXBpY2tlci1jYXJldC5kaXJlY3RpdmUnO1xuZXhwb3J0IHtFbW9qaUVtcHR5Q2F0ZWdvcnlQaXBlIGFzIMm1bH0gZnJvbSAnLi9saWIvcGlwZXMvZW1vamktZW1wdHktY2F0ZWdvcnkucGlwZSc7Il19