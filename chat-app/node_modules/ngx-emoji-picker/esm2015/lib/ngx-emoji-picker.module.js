/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { EmojiButtonComponent } from './components/emoji-button.component';
import { EmojiCategoriesComponent } from './components/emoji-categories.component';
import { EmojiCategoryComponent } from './components/emoji-category.component';
import { EmojiContentComponent } from './components/emoji-content.component';
import { EmojiFooterComponent } from './components/emoji-footer.component';
import { EmojiHeaderComponent } from './components/emoji-header.component';
import { EmojiListComponent } from './components/emoji-list.component';
import { EmojiSearchComponent } from './components/emoji-search.component';
import { EmojiPickerApiDirective } from './directives/emoji-picker-api.directive';
import { EmojiPickerCaretDirective } from './directives/emoji-picker-caret.directive';
import { EmojiEmptyCategoryPipe } from './pipes/emoji-empty-category.pipe';
import { EmojiPickerComponent } from './components/emoji-picker.component';
export class NgxEmojiPickerModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: NgxEmojiPickerModule,
            providers: []
        };
    }
}
NgxEmojiPickerModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    EmojiPickerApiDirective,
                    EmojiPickerCaretDirective,
                    EmojiButtonComponent,
                    EmojiContentComponent,
                    EmojiPickerComponent,
                    EmojiListComponent,
                    EmojiHeaderComponent,
                    EmojiSearchComponent,
                    EmojiCategoriesComponent,
                    EmojiCategoryComponent,
                    EmojiFooterComponent,
                    EmojiEmptyCategoryPipe
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    EmojiPickerApiDirective,
                    EmojiPickerCaretDirective,
                    EmojiButtonComponent,
                    EmojiContentComponent,
                    EmojiPickerComponent,
                    EmojiListComponent,
                    EmojiHeaderComponent,
                    EmojiSearchComponent,
                    EmojiCategoriesComponent,
                    EmojiCategoryComponent,
                    EmojiFooterComponent
                ],
                providers: [],
                entryComponents: [EmojiPickerComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVtb2ppLXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZW1vamktcGlja2VyLyIsInNvdXJjZXMiOlsibGliL25neC1lbW9qaS1waWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDM0UsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbkYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDN0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDM0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFFM0UsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDM0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFxQzNFLE1BQU0sT0FBTyxvQkFBb0I7Ozs7SUFDL0IsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLG9CQUFvQjtZQUM5QixTQUFTLEVBQUUsRUFBRTtTQUNkLENBQUM7SUFDSixDQUFDOzs7WUF4Q0YsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWix1QkFBdUI7b0JBQ3ZCLHlCQUF5QjtvQkFDekIsb0JBQW9CO29CQUNwQixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIsa0JBQWtCO29CQUNsQixvQkFBb0I7b0JBQ3BCLG9CQUFvQjtvQkFDcEIsd0JBQXdCO29CQUN4QixzQkFBc0I7b0JBQ3RCLG9CQUFvQjtvQkFDcEIsc0JBQXNCO2lCQUN2QjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsWUFBWTtpQkFDYjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsdUJBQXVCO29CQUN2Qix5QkFBeUI7b0JBQ3pCLG9CQUFvQjtvQkFDcEIscUJBQXFCO29CQUNyQixvQkFBb0I7b0JBQ3BCLGtCQUFrQjtvQkFDbEIsb0JBQW9CO29CQUNwQixvQkFBb0I7b0JBQ3BCLHdCQUF3QjtvQkFDeEIsc0JBQXNCO29CQUN0QixvQkFBb0I7aUJBQ3JCO2dCQUNELFNBQVMsRUFBRSxFQUFFO2dCQUNiLGVBQWUsRUFBRSxDQUFDLG9CQUFvQixDQUFDO2FBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IEVtb2ppQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Vtb2ppLWJ1dHRvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRW1vamlDYXRlZ29yaWVzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Vtb2ppLWNhdGVnb3JpZXMuY29tcG9uZW50JztcbmltcG9ydCB7IEVtb2ppQ2F0ZWdvcnlDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZW1vamktY2F0ZWdvcnkuY29tcG9uZW50JztcbmltcG9ydCB7IEVtb2ppQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9lbW9qaS1jb250ZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFbW9qaUZvb3RlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9lbW9qaS1mb290ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEVtb2ppSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Vtb2ppLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRW1vamlMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Vtb2ppLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IEVtb2ppU2VhcmNoQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Vtb2ppLXNlYXJjaC5jb21wb25lbnQnO1xuXG5pbXBvcnQgeyBFbW9qaVBpY2tlckFwaURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9lbW9qaS1waWNrZXItYXBpLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBFbW9qaVBpY2tlckNhcmV0RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2Vtb2ppLXBpY2tlci1jYXJldC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRW1vamlFbXB0eUNhdGVnb3J5UGlwZSB9IGZyb20gJy4vcGlwZXMvZW1vamktZW1wdHktY2F0ZWdvcnkucGlwZSc7XG5pbXBvcnQgeyBFbW9qaVBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9lbW9qaS1waWNrZXIuY29tcG9uZW50JztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBFbW9qaVBpY2tlckFwaURpcmVjdGl2ZSxcbiAgICBFbW9qaVBpY2tlckNhcmV0RGlyZWN0aXZlLFxuICAgIEVtb2ppQnV0dG9uQ29tcG9uZW50LFxuICAgIEVtb2ppQ29udGVudENvbXBvbmVudCxcbiAgICBFbW9qaVBpY2tlckNvbXBvbmVudCxcbiAgICBFbW9qaUxpc3RDb21wb25lbnQsXG4gICAgRW1vamlIZWFkZXJDb21wb25lbnQsXG4gICAgRW1vamlTZWFyY2hDb21wb25lbnQsXG4gICAgRW1vamlDYXRlZ29yaWVzQ29tcG9uZW50LFxuICAgIEVtb2ppQ2F0ZWdvcnlDb21wb25lbnQsXG4gICAgRW1vamlGb290ZXJDb21wb25lbnQsXG4gICAgRW1vamlFbXB0eUNhdGVnb3J5UGlwZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBFbW9qaVBpY2tlckFwaURpcmVjdGl2ZSxcbiAgICBFbW9qaVBpY2tlckNhcmV0RGlyZWN0aXZlLFxuICAgIEVtb2ppQnV0dG9uQ29tcG9uZW50LFxuICAgIEVtb2ppQ29udGVudENvbXBvbmVudCxcbiAgICBFbW9qaVBpY2tlckNvbXBvbmVudCxcbiAgICBFbW9qaUxpc3RDb21wb25lbnQsXG4gICAgRW1vamlIZWFkZXJDb21wb25lbnQsXG4gICAgRW1vamlTZWFyY2hDb21wb25lbnQsXG4gICAgRW1vamlDYXRlZ29yaWVzQ29tcG9uZW50LFxuICAgIEVtb2ppQ2F0ZWdvcnlDb21wb25lbnQsXG4gICAgRW1vamlGb290ZXJDb21wb25lbnRcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXSxcbiAgZW50cnlDb21wb25lbnRzOiBbRW1vamlQaWNrZXJDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIE5neEVtb2ppUGlja2VyTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFbW9qaVBpY2tlck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW11cbiAgICB9O1xuICB9XG4gfVxuIl19