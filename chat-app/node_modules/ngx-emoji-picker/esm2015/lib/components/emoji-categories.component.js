/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
export class EmojiCategoriesComponent {
    constructor() {
        this.categorySelection = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleCategorySelection(event) {
        this.categorySelection.emit(event);
    }
}
EmojiCategoriesComponent.decorators = [
    { type: Component, args: [{
                selector: 'emoji-categories',
                template: `
  <ng-container *ngFor="let category of emojisCategories">
    <emoji-button 
      (selection)="handleCategorySelection($event)"
      [dataToEmit]="category"
      [emoji]="category.icon"></emoji-button>
  </ng-container>
  `,
                styles: [":host{display:flex;flex-wrap:wrap;justify-content:space-between;margin:0 0 10px}"]
            }] }
];
/** @nocollapse */
EmojiCategoriesComponent.ctorParameters = () => [];
EmojiCategoriesComponent.propDecorators = {
    emojisCategories: [{ type: Input, args: ['emojisCategories',] }],
    categorySelection: [{ type: Output, args: ['categorySelection',] }]
};
if (false) {
    /** @type {?} */
    EmojiCategoriesComponent.prototype.emojisCategories;
    /** @type {?} */
    EmojiCategoriesComponent.prototype.categorySelection;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamktY2F0ZWdvcmllcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZW1vamktcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZW1vamktY2F0ZWdvcmllcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFldkUsTUFBTSxPQUFPLHdCQUF3QjtJQUluQztRQUY2QixzQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBRTFELENBQUM7Ozs7O0lBRWhCLHVCQUF1QixDQUFDLEtBQUs7UUFDM0IsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBRTVCLFFBQVEsRUFBRTs7Ozs7OztHQU9UOzthQUNGOzs7OzsrQkFHRSxLQUFLLFNBQUMsa0JBQWtCO2dDQUN4QixNQUFNLFNBQUMsbUJBQW1COzs7O0lBRDNCLG9EQUE0Qzs7SUFDNUMscURBQXlFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZW1vamktY2F0ZWdvcmllcycsXG4gIHN0eWxlVXJsczogWycuLi9zdHlsZXMvZW1vamktY2F0ZWdvcmllcy5zY3NzJ10sXG4gIHRlbXBsYXRlOiBgXG4gIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGNhdGVnb3J5IG9mIGVtb2ppc0NhdGVnb3JpZXNcIj5cbiAgICA8ZW1vamktYnV0dG9uIFxuICAgICAgKHNlbGVjdGlvbik9XCJoYW5kbGVDYXRlZ29yeVNlbGVjdGlvbigkZXZlbnQpXCJcbiAgICAgIFtkYXRhVG9FbWl0XT1cImNhdGVnb3J5XCJcbiAgICAgIFtlbW9qaV09XCJjYXRlZ29yeS5pY29uXCI+PC9lbW9qaS1idXR0b24+XG4gIDwvbmctY29udGFpbmVyPlxuICBgXG59KVxuXG5leHBvcnQgY2xhc3MgRW1vamlDYXRlZ29yaWVzQ29tcG9uZW50IHtcbiAgQElucHV0KCdlbW9qaXNDYXRlZ29yaWVzJykgZW1vamlzQ2F0ZWdvcmllcztcbiAgQE91dHB1dCgnY2F0ZWdvcnlTZWxlY3Rpb24nKSBjYXRlZ29yeVNlbGVjdGlvbiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGhhbmRsZUNhdGVnb3J5U2VsZWN0aW9uKGV2ZW50KSB7XG4gICAgdGhpcy5jYXRlZ29yeVNlbGVjdGlvbi5lbWl0KGV2ZW50KTtcbiAgfVxufVxuIl19