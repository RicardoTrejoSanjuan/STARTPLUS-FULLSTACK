/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChildren, QueryList, forwardRef, Output, EventEmitter } from '@angular/core';
import { EmojiCategoryComponent } from './emoji-category.component';
export class EmojiListComponent {
    constructor() {
        this.emojiSelectionEmitter = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    selectCategory(event) {
        this.emojiCategoryComponents.forEach((categoryCmp) => {
            if (categoryCmp['category'].name === event.name) {
                categoryCmp.scrollIntoView();
            }
        });
    }
}
EmojiListComponent.decorators = [
    { type: Component, args: [{
                selector: 'emoji-list',
                template: `
  <div class="emoji-list">
    <ng-container *ngFor="let emojiCategory of emojis | notEmptyEmojiCategory">
      <emoji-category [category]="emojiCategory"></emoji-category>
      <div class="emoji-buttons">
        <emoji-button 
        *ngFor="let emoji of emojiCategory.emojis"
        (selection)="emojiSelectionEmitter.emit($event)"
        [emoji]="emoji"></emoji-button>
      </div>
    </ng-container>
  </div>
  `,
                styles: [":host{overflow-y:auto}.emoji-list{padding:0 10px 10px}.emoji-buttons{display:flex;justify-content:center;flex-wrap:wrap;margin:5px 0}"]
            }] }
];
/** @nocollapse */
EmojiListComponent.ctorParameters = () => [];
EmojiListComponent.propDecorators = {
    emojiCategoryComponents: [{ type: ViewChildren, args: [forwardRef(() => EmojiCategoryComponent),] }],
    emojis: [{ type: Input, args: ['emojis',] }],
    emojiSelectionEmitter: [{ type: Output, args: ['emoji-selection',] }]
};
if (false) {
    /** @type {?} */
    EmojiListComponent.prototype.emojiCategoryComponents;
    /** @type {?} */
    EmojiListComponent.prototype.emojis;
    /** @type {?} */
    EmojiListComponent.prototype.emojiSelectionEmitter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamktbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZW1vamktcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZW1vamktbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUcsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFvQnBFLE1BQU0sT0FBTyxrQkFBa0I7SUFLN0I7UUFGMkIsMEJBQXFCLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUUzRCxDQUFDOzs7OztJQUVWLGNBQWMsQ0FBQyxLQUFLO1FBQ3pCLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFrQyxFQUFFLEVBQUU7WUFDMUUsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQyxJQUFJLEVBQUU7Z0JBQy9DLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQzthQUM5QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBL0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFFdEIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7R0FZVDs7YUFDRjs7Ozs7c0NBR0UsWUFBWSxTQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztxQkFDckQsS0FBSyxTQUFDLFFBQVE7b0NBQ2QsTUFBTSxTQUFDLGlCQUFpQjs7OztJQUZ6QixxREFBbUg7O0lBQ25ILG9DQUF3Qjs7SUFDeEIsbURBQTJFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NoaWxkcmVuLCBRdWVyeUxpc3QsIGZvcndhcmRSZWYsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbW9qaUNhdGVnb3J5Q29tcG9uZW50IH0gZnJvbSAnLi9lbW9qaS1jYXRlZ29yeS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlbW9qaS1saXN0JyxcbiAgc3R5bGVVcmxzOiBbJy4uL3N0eWxlcy9lbW9qaS1saXN0LnNjc3MnXSxcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdiBjbGFzcz1cImVtb2ppLWxpc3RcIj5cbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBlbW9qaUNhdGVnb3J5IG9mIGVtb2ppcyB8IG5vdEVtcHR5RW1vamlDYXRlZ29yeVwiPlxuICAgICAgPGVtb2ppLWNhdGVnb3J5IFtjYXRlZ29yeV09XCJlbW9qaUNhdGVnb3J5XCI+PC9lbW9qaS1jYXRlZ29yeT5cbiAgICAgIDxkaXYgY2xhc3M9XCJlbW9qaS1idXR0b25zXCI+XG4gICAgICAgIDxlbW9qaS1idXR0b24gXG4gICAgICAgICpuZ0Zvcj1cImxldCBlbW9qaSBvZiBlbW9qaUNhdGVnb3J5LmVtb2ppc1wiXG4gICAgICAgIChzZWxlY3Rpb24pPVwiZW1vamlTZWxlY3Rpb25FbWl0dGVyLmVtaXQoJGV2ZW50KVwiXG4gICAgICAgIFtlbW9qaV09XCJlbW9qaVwiPjwvZW1vamktYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuICBgXG59KVxuXG5leHBvcnQgY2xhc3MgRW1vamlMaXN0Q29tcG9uZW50IHtcbiAgQFZpZXdDaGlsZHJlbihmb3J3YXJkUmVmKCgpID0+IEVtb2ppQ2F0ZWdvcnlDb21wb25lbnQpKSBlbW9qaUNhdGVnb3J5Q29tcG9uZW50czogUXVlcnlMaXN0PEVtb2ppQ2F0ZWdvcnlDb21wb25lbnQ+O1xuICBASW5wdXQoJ2Vtb2ppcycpIGVtb2ppcztcbiAgQE91dHB1dCgnZW1vamktc2VsZWN0aW9uJykgZW1vamlTZWxlY3Rpb25FbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBwdWJsaWMgc2VsZWN0Q2F0ZWdvcnkoZXZlbnQpIHtcbiAgICB0aGlzLmVtb2ppQ2F0ZWdvcnlDb21wb25lbnRzLmZvckVhY2goKGNhdGVnb3J5Q21wOkVtb2ppQ2F0ZWdvcnlDb21wb25lbnQpID0+IHtcbiAgICAgIGlmIChjYXRlZ29yeUNtcFsnY2F0ZWdvcnknXS5uYW1lID09PSBldmVudC5uYW1lKSB7XG4gICAgICAgIGNhdGVnb3J5Q21wLnNjcm9sbEludG9WaWV3KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==