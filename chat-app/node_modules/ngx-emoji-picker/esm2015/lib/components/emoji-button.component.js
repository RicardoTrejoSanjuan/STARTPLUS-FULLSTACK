/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
export class EmojiButtonComponent {
    constructor() {
        this.selectionEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnChanges() { }
}
EmojiButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'emoji-button',
                template: `
    <button
      class="emoji-button" 
      (click)="selectionEmitter.emit(dataToEmit || emoji)">
      {{emoji[0]}}
    </button>
  `,
                styles: [":host{display:inline-block}.emoji-button{padding:0;border:none;outline:0;background:0 0;width:34px;height:34px;border-radius:3px;font-size:24px;line-height:1.1;cursor:pointer;transition:.2s}.emoji-button:focus,.emoji-button:hover{background:#f1f1f1;border-color:#f1f1f1}"]
            }] }
];
/** @nocollapse */
EmojiButtonComponent.ctorParameters = () => [];
EmojiButtonComponent.propDecorators = {
    emoji: [{ type: Input, args: ['emoji',] }],
    dataToEmit: [{ type: Input, args: ['dataToEmit',] }],
    options: [{ type: Input, args: ['options',] }],
    fitzpatrick: [{ type: Input, args: ['fitzpatrick',] }],
    selectionEmitter: [{ type: Output, args: ['selection',] }]
};
if (false) {
    /** @type {?} */
    EmojiButtonComponent.prototype.emoji;
    /** @type {?} */
    EmojiButtonComponent.prototype.dataToEmit;
    /** @type {?} */
    EmojiButtonComponent.prototype.options;
    /** @type {?} */
    EmojiButtonComponent.prototype.fitzpatrick;
    /** @type {?} */
    EmojiButtonComponent.prototype.selectionEmitter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamktYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1lbW9qaS1waWNrZXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9lbW9qaS1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBYXRFLE1BQU0sT0FBTyxvQkFBb0I7SUFRL0I7UUFGcUIscUJBQWdCLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUE7SUFFOUQsQ0FBQzs7OztJQUVoQixXQUFXLEtBQUksQ0FBQzs7O1lBckJqQixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBRXhCLFFBQVEsRUFBRTs7Ozs7O0dBTVQ7O2FBQ0Y7Ozs7O29CQUVFLEtBQUssU0FBQyxPQUFPO3lCQUNiLEtBQUssU0FBQyxZQUFZO3NCQUNsQixLQUFLLFNBQUMsU0FBUzswQkFDZixLQUFLLFNBQUMsYUFBYTsrQkFFbkIsTUFBTSxTQUFDLFdBQVc7Ozs7SUFMbkIscUNBQXFCOztJQUNyQiwwQ0FBK0I7O0lBQy9CLHVDQUF5Qjs7SUFDekIsMkNBQWlDOztJQUVqQyxnREFBNkUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Vtb2ppLWJ1dHRvbicsXG4gIHN0eWxlVXJsczogWycuLi9zdHlsZXMvZW1vamktYnV0dG9uLnNjc3MnXSxcbiAgdGVtcGxhdGU6IGBcbiAgICA8YnV0dG9uXG4gICAgICBjbGFzcz1cImVtb2ppLWJ1dHRvblwiIFxuICAgICAgKGNsaWNrKT1cInNlbGVjdGlvbkVtaXR0ZXIuZW1pdChkYXRhVG9FbWl0IHx8IGVtb2ppKVwiPlxuICAgICAge3tlbW9qaVswXX19XG4gICAgPC9idXR0b24+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgRW1vamlCdXR0b25Db21wb25lbnQge1xuICBASW5wdXQoJ2Vtb2ppJykgZW1vamlcbiAgQElucHV0KCdkYXRhVG9FbWl0JykgZGF0YVRvRW1pdFxuICBASW5wdXQoJ29wdGlvbnMnKSBvcHRpb25zXG4gIEBJbnB1dCgnZml0enBhdHJpY2snKSBmaXR6cGF0cmlja1xuXG4gIEBPdXRwdXQoJ3NlbGVjdGlvbicpIHNlbGVjdGlvbkVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpXG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25DaGFuZ2VzKCkge31cbn1cbiJdfQ==